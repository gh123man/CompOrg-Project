   1 0000               
   2 0000               
   3 0000               
   4 0000               PRINT_INT = 1
   5 0000               PRINT_STRING = 4
   6 0000               READ_INT = 5
   7 0000               EXIT = 10
   8 0000               
   9 0000               	.data
  10 0000               	.align	0
  11 0000               
  12 0000               
  13 0000               
  14 0000               board_size:
  15 0000 00      		.byte	0
  16 0001               board:
  17 0001 00000000		.space	256
          00000000
          00000000
          00000000
          00000000
          00000000
  18 0101               north_hints:
  19 0101 00000000		.space	32
          00000000
          00000000
          00000000
          00000000
          00000000
  20 0121               south_hints:
  21 0121 00000000		.space	32
          00000000
          00000000
          00000000
          00000000
          00000000
  22 0141               east_hints:
  23 0141 00000000		.space	32
          00000000
          00000000
          00000000
          00000000
          00000000
  24 0161               west_hints:
  25 0161 00000000		.space	32
          00000000
          00000000
          00000000
          00000000
          00000000
  26 0181               
  27 0181               board_row_break_part:
  28 0181 2B2D2D2D		.asciiz "+---"
          00      
  29 0186               plus_char_break:
  30 0186 2B0A00  		.asciiz "+\n"
  31 0189               board_space_front:
  32 0189 7C2000  		.asciiz "| "
  33 018c               board_space_mid:
  34 018c 207C2000		.asciiz " | "
  35 0190               board_space_back:
  36 0190 207C0A00		.asciiz " |\n"
  37 0194               new_line_char:
  38 0194 0A00    		.asciiz "\n"
  39 0196               spacesss:
  40 0196 20202000		.asciiz "   "
  41 019a               spacess:
  42 019a 202000  		.asciiz "  "
  43 019d               spaces:
  44 019d 2000    		.asciiz " "
  45 019f               	
  46 019f               board_input_error:
  47 019f 0A496E76		.asciiz "\nInvalid board size, Skyscrapers terminating\n"
          616C6964
          20626F61
          72642073
          697A652C
          20536B79
  48 01cd               illegal_input_error:
  49 01cd 496C6C65		.asciiz "Illegal input value, Skyscrapers terminating\n"
          67616C20
          696E7075
          74207661
          6C75652C
          20536B79
  50 01fb               fixed_number_input_error:
  51 01fb 496E7661		.asciiz "Invalid number of fixed values, Skyscrapers terminating\n"
          6C696420
          6E756D62
          6572206F
          66206669
          78656420
  52 0234               fixed_input_error:
  53 0234 496C6C65		.asciiz "Illegal fixed input values, Skyscrapers terminating\n"
          67616C20
          66697865
          6420696E
          70757420
          76616C75
  54 0269               	
  55 0269               	
  56 0000               	.text
  57 0000               	.align	2
  58 0000               
  59 0000               ##################################################
  60 0000               #              Program area                      #
  61 0000               ##################################################
  62 0000               
  63 0000               
  64 0000               #
  65 0000               # Name: Main
  66 0000               #
  67 0000               main:
  68 0000 23BDFFF8		addi	$sp, $sp, -8
  69 0004 AFBF0004		sw	$ra, 4($sp)
  70 0008 AFB00000		sw	$s0, 0($sp)
  71 000c               	
  72 000c 0C000024		jal	read_input
  73 0010 10400001		beq	$v0, $zero, main_done	#end if it returned false. 
  74 0014               	
  75 0014 0C0000A7		jal	print_board
  76 0018               
  77 0018               main_done:
  78 0018 8FBF0004		lw	$ra, 4($sp)
  79 001c 8FB00000		lw	$s0, 0($sp)
  80 0020 23BD0008		addi	$sp, $sp, 8
  81 0024 03E00008		jr	$ra
  82 0028               
  83 0028               #
  84 0028               # Name: write_board
  85 0028               #
  86 0028               # Arguments:
  87 0028               #    a0: x index
  88 0028               #    a1: y index
  89 0028               #    a2: value
  90 0028               #
  91 0028               write_board:
  92 0028 3C080000		la	$t0, board_size
     002c 35080000
  93 0030 81080000		lb	$t0, 0($t0)
  94 0034               	#t0 has board width
  95 0034               	
  96 0034 01050018		mul	$t0, $t0, $a1
     0038 00004012
  97 003c 01044020		add	$t0, $t0, $a0
  98 0040               	
  99 0040 3C090000		la	$t1, board
     0044 35290000
 100 0048 01284020		add	$t0, $t1, $t0
 101 004c A1060000		sb	$a2, 0($t0)
 102 0050               	
 103 0050 03E00008		jr	$ra
 104 0054               	
 105 0054               
 106 0054               
 107 0054               #
 108 0054               # Name: get_<direction>_hint
 109 0054               #
 110 0054               # Arguments: 
 111 0054               #     $a0: index
 112 0054               #
 113 0054               get_north_hint:
 114 0054 3C050000		la	$a1, north_hints
     0058 34A50000
 115 005c 08000021		j	get_hint
 116 0060               get_south_hint:
 117 0060 3C050000		la	$a1, south_hints
     0064 34A50000
 118 0068 08000021		j	get_hint
 119 006c               get_east_hint:
 120 006c 3C050000		la	$a1, east_hints
     0070 34A50000
 121 0074 08000021		j	get_hint
 122 0078               get_west_hint:
 123 0078 3C050000		la	$a1, west_hints
     007c 34A50000
 124 0080 08000021		j	get_hint
 125 0084               get_hint:
 126 0084 00852820		add	$a1, $a0, $a1
 127 0088 80A20000		lb	$v0, 0($a1)
 128 008c 03E00008		jr	$ra
 129 0090               
 130 0090               #####################################################
 131 0090               #               Data Input Functions                #
 132 0090               #####################################################
 133 0090               
 134 0090               #
 135 0090               # Name: read_input
 136 0090               #
 137 0090               read_input:
 138 0090 23BDFFF8		addi	$sp, $sp, -8
 139 0094 AFBF0004		sw	$ra, 4($sp)
 140 0098 AFB00000		sw	$s0, 0($sp)
 141 009c               
 142 009c               	#read user input board bounds
 143 009c 34020005		li	$v0, READ_INT
 144 00a0 0000000C		syscall
 145 00a4               	
 146 00a4               	#confirm starting board bounds
 147 00a4 34080003		li	$t0, 3
 148 00a8 34090009		li	$t1, 9
 149 00ac 3C040000		la	$a0, board_input_error
     00b0 34840000
 150 00b4 0048082A		blt	$v0, $t0, read_input_error
     00b8 14200026
 151 00bc 0122082A		blt	$t1, $v0, read_input_error
     00c0 14200024
 152 00c4               	
 153 00c4               	#write the borad bounds
 154 00c4 3C080000		la	$t0, board_size
     00c8 35080000
 155 00cc A1020000		sb	$v0, 0($t0)
 156 00d0               	
 157 00d0 00408021		move	$s0, $v0	#s0 will contian the board size
 158 00d4               	
 159 00d4 3C040000		la	$a0, north_hints
     00d8 34840000
 160 00dc 02002821		move	$a1, $s0
 161 00e0 0C00008B		jal	load_hints
 162 00e4 1040001B		beq	$v0, $zero, read_input_error
 163 00e8               	
 164 00e8               	
 165 00e8 3C040000		la	$a0, east_hints
     00ec 34840000
 166 00f0 02002821		move	$a1, $s0
 167 00f4 0C00008B		jal	load_hints
 168 00f8 10400016		beq	$v0, $zero, read_input_error
 169 00fc               
 170 00fc               
 171 00fc 3C040000		la	$a0, south_hints
     0100 34840000
 172 0104 02002821		move	$a1, $s0
 173 0108 0C00008B		jal	load_hints
 174 010c 10400011		beq	$v0, $zero, read_input_error
 175 0110               
 176 0110               
 177 0110 3C040000		la	$a0, west_hints
     0114 34840000
 178 0118 02002821		move	$a1, $s0
 179 011c 0C00008B		jal	load_hints
 180 0120 1040000C		beq	$v0, $zero, read_input_error
 181 0124               	
 182 0124               	
 183 0124               	
 184 0124 34020005		li	$v0, READ_INT
 185 0128 0000000C		syscall
 186 012c               	
 187 012c 3C040000		la	$a0, fixed_input_error
     0130 34840000
 188 0134 0040082A		blt	$v0, $zero, read_input_error
     0138 14200006
 189 013c               	
 190 013c 00402021		move	$a0, $v0
 191 0140 02002821		move	$a1, $s0
 192 0144 0C00005B		jal	load_fixed
 193 0148 10400002		beq	$v0, $zero, read_input_error
 194 014c               	
 195 014c               
 196 014c               
 197 014c               	#all input is good
 198 014c 34020001		li	$v0, 1		#return 1
 199 0150 08000057		j	read_input_end
 200 0154               
 201 0154               	
 202 0154               read_input_error:
 203 0154               	
 204 0154 0C000116		jal	print_string
 205 0158 34020000		li	$v0, 0		#return 0
 206 015c               
 207 015c               read_input_end:
 208 015c 8FBF0004		lw	$ra, 4($sp)
 209 0160 8FB00000		lw	$s0, 0($sp)
 210 0164 23BD0008		addi	$sp, $sp, 8
 211 0168 03E00008		jr	$ra
 212 016c               
 213 016c               
 214 016c               
 215 016c               
 216 016c               
 217 016c               
 218 016c               
 219 016c               #
 220 016c               # Name: load_fixed
 221 016c               #
 222 016c               # Arguments: 
 223 016c               #    $a0: num of fixed towers
 224 016c               #    $a1: board Size
 225 016c               #
 226 016c               load_fixed:
 227 016c 23BDFFF0		addi	$sp, $sp, -16
 228 0170 AFBF000C		sw	$ra, 12($sp)
 229 0174 AFB20008		sw	$s2, 8($sp)
 230 0178 AFB10004		sw	$s1, 4($sp)
 231 017c AFB00000		sw	$s0, 0($sp)
 232 0180               	
 233 0180 00808021		move	$s0, $a0	#s0 contains number of fixed towers
 234 0184 34110000		li	$s1, 0		#conter
 235 0188 00A09021		move	$s2, $a1
 236 018c               	
 237 018c 34020001		li	$v0, 1
 238 0190               	
 239 0190               read_fixed_loop:
 240 0190               
 241 0190 12300020		beq	$s1, $s0, load_fixed_done
 242 0194               	
 243 0194               	#load x
 244 0194 34020005		li	$v0, READ_INT
 245 0198 0000000C		syscall
 246 019c 00404021		move	$t0, $v0
 247 01a0               	
 248 01a0 0100082A		blt	$t0, $zero, size_fixed_error
     01a4 14200017
 249 01a8 0248082A		blt	$s2, $t0, size_fixed_error
     01ac 14200015
 250 01b0               	
 251 01b0               	#load y
 252 01b0 34020005		li	$v0, READ_INT
 253 01b4 0000000C		syscall
 254 01b8 00404821		move	$t1, $v0
 255 01bc               	
 256 01bc 0120082A		blt	$t1, $zero, size_fixed_error
     01c0 14200010
 257 01c4 0249082A		blt	$s2, $t1, size_fixed_error
     01c8 1420000E
 258 01cc               	
 259 01cc               	#load value
 260 01cc 34020005		li	$v0, READ_INT
 261 01d0 0000000C		syscall
 262 01d4 00405021		move	$t2, $v0
 263 01d8               	
 264 01d8 34190001		li	$t9, 1
 265 01dc 0159082A		blt	$t2, $t9, size_fixed_error
     01e0 14200008
 266 01e4 024A082A		blt	$s2, $t2, size_fixed_error
     01e8 14200006
 267 01ec               	
 268 01ec 01002021		move	$a0, $t0
 269 01f0 01202821		move	$a1, $t1
 270 01f4 01403021		move	$a2, $t2
 271 01f8 0C00000A		jal	write_board
 272 01fc               	
 273 01fc               	
 274 01fc 22310001		addi	$s1, $s1, 1
 275 0200 08000064		j	read_fixed_loop	
 276 0204               
 277 0204               size_fixed_error:
 278 0204               	
 279 0204 3C040000		la	$a0, fixed_input_error
     0208 34840000
 280 020c 34020000		li	$v0, 0
 281 0210 08000085		j	load_fixed_done
 282 0214               	
 283 0214               load_fixed_done:
 284 0214 8FBF000C		lw	$ra, 12($sp)
 285 0218 8FB20008		lw	$s2, 8($sp)
 286 021c 8FB10004		lw	$s1, 4($sp)
 287 0220 8FB00000		lw	$s0, 0($sp)
 288 0224 23BD0010		addi	$sp, $sp, 16
 289 0228 03E00008		jr	$ra
 290 022c               
 291 022c               
 292 022c               
 293 022c               
 294 022c               
 295 022c               
 296 022c               	
 297 022c               
 298 022c               #
 299 022c               # Name: load_hints
 300 022c               #
 301 022c               # Arguments: 
 302 022c               #    $a0: hint array pointer
 303 022c               #    $a1: board size
 304 022c               #
 305 022c               load_hints:
 306 022c 23BDFFF4		addi	$sp, $sp, -12
 307 0230 AFBF0008		sw	$ra, 8($sp)
 308 0234 AFB10004		sw	$s1, 4($sp)
 309 0238 AFB00000		sw	$s0, 0($sp)
 310 023c               	
 311 023c 00808021		move	$s0, $a0
 312 0240 00A08821		move	$s1, $a1
 313 0244               	
 314 0244 34080000		li	$t0, 0		#counter
 315 0248 34020001		li	$v0, 1
 316 024c               read_input_loop:
 317 024c               	
 318 024c 1111000E		beq	$t0, $s1, load_hints_done
 319 0250               	
 320 0250 34020005		li	$v0, READ_INT
 321 0254 0000000C		syscall
 322 0258               	
 323 0258 0040082A		blt	$v0, $zero, size_input_error
     025c 14200006
 324 0260 0222082A		blt	$s1, $v0, size_input_error
     0264 14200004
 325 0268               	
 326 0268               	
 327 0268 A2020000		sb	$v0, 0($s0)
 328 026c 22100001		addi	$s0, $s0, 1
 329 0270               
 330 0270 21080001		addi	$t0, $t0, 1
 331 0274 08000093		j	read_input_loop
 332 0278               
 333 0278               	
 334 0278               size_input_error:
 335 0278               	
 336 0278 3C040000		la	$a0, illegal_input_error
     027c 34840000
 337 0280 34020000		li	$v0, 0
 338 0284 080000A2		j	load_hints_done
 339 0288               	
 340 0288               load_hints_done:
 341 0288 8FBF0008		lw	$ra, 8($sp)
 342 028c 8FB10004		lw	$s1, 4($sp)
 343 0290 8FB00000		lw	$s0, 0($sp)
 344 0294 23BD000C		addi	$sp, $sp, 12
 345 0298 03E00008		jr	$ra
 346 029c               	
 347 029c               	
 348 029c               	
 349 029c               	
 350 029c               
 351 029c               #####################################################
 352 029c               #               Print functions                     #
 353 029c               #####################################################
 354 029c               
 355 029c               #
 356 029c               # Name: print board
 357 029c               #
 358 029c               print_board:
 359 029c               	
 360 029c 23BDFFEC		addi	$sp, $sp, -20
 361 02a0 AFBF0010		sw	$ra, 16($sp)
 362 02a4 AFB3000C		sw	$s3, 12($sp)
 363 02a8 AFB20008		sw	$s2, 8($sp)
 364 02ac AFB10004		sw	$s1, 4($sp)
 365 02b0 AFB00000		sw	$s0, 0($sp)
 366 02b4               	
 367 02b4 3C100000		la	$s0, board_size
     02b8 36100000
 368 02bc 82100000		lb	$s0, 0($s0)
 369 02c0 3C110000		la	$s1, board		#s1 contains board pointer
     02c4 36310000
 370 02c8 34120000		li	$s2, 0
 371 02cc               
 372 02cc 3C040000		la	$a0, north_hints
     02d0 34840000
 373 02d4 0C000100		jal	print_x_hints
 374 02d8               
 375 02d8               print_board_loop_row:
 376 02d8               
 377 02d8 1250001B		beq	$s2, $s0, print_board_done
 378 02dc               
 379 02dc 0C0000E0		jal	print_break_row		#print break
 380 02e0               
 381 02e0 3C040000		la	$a0, west_hints
     02e4 34840000
 382 02e8 02402821		move	$a1, $s2
 383 02ec 0C0000F8		jal	print_y_hint		#print y hint
 384 02f0               	
 385 02f0 3C040000		la	$a0, spaces
     02f4 34840000
 386 02f8 0C000116		jal	print_string
 387 02fc               
 388 02fc 3C040000		la	$a0, board_space_front
     0300 34840000
 389 0304 0C000116		jal	print_string
 390 0308               	
 391 0308               
 392 0308 00009821		move	$s3, $zero
 393 030c               
 394 030c               
 395 030c               print_board_loop_col:
 396 030c               
 397 030c 12700008		beq	$s3, $s0, print_board_loop_col_done
 398 0310               
 399 0310 82240000		lb	$a0, 0($s1)
 400 0314 0C000119		jal	print_number
 401 0318               
 402 0318 3C040000		la	$a0, board_space_mid
     031c 34840000
 403 0320 0C000116		jal	print_string
 404 0324               	
 405 0324 22730001		addi	$s3, $s3, 1
 406 0328 22310001		addi	$s1, $s1, 1
 407 032c 080000C3		j	print_board_loop_col
 408 0330               	
 409 0330               print_board_loop_col_done:
 410 0330               	
 411 0330 3C040000		la	$a0, east_hints
     0334 34840000
 412 0338 02402821		move	$a1, $s2
 413 033c 0C0000F8		jal	print_y_hint
 414 0340               	
 415 0340               	#addi	$s1, $s1, 1
 416 0340 22520001		addi	$s2, $s2, 1
 417 0344               	
 418 0344 080000B6		j	print_board_loop_row
 419 0348               
 420 0348               print_board_done:
 421 0348               
 422 0348 0C0000E0		jal	print_break_row
 423 034c               
 424 034c 3C040000		la	$a0, south_hints
     0350 34840000
 425 0354 0C000100		jal	print_x_hints
 426 0358               	
 427 0358 3C040000		la	$a0, new_line_char
     035c 34840000
 428 0360 0C000116		jal	print_string
 429 0364               
 430 0364 8FBF0010		lw	$ra, 16($sp)
 431 0368 8FB3000C		lw	$s3, 12($sp)
 432 036c 8FB20008		lw	$s2, 8($sp)
 433 0370 8FB10004		lw	$s1, 4($sp)
 434 0374 8FB00000		lw	$s0, 0($sp)
 435 0378 23BD0014		addi	$sp, $sp, 20
 436 037c 03E00008		jr	$ra
 437 0380               
 438 0380               
 439 0380               #
 440 0380               # Name: Print break row
 441 0380               #
 442 0380               print_break_row:
 443 0380               	
 444 0380 23BDFFFC		addi	$sp, $sp, -4
 445 0384 AFBF0000		sw	$ra, 0($sp)
 446 0388               
 447 0388 3C040000		la	$a0, new_line_char
     038c 34840000
 448 0390 0C000116		jal	print_string
 449 0394               
 450 0394 3C040000		la	$a0, spacess
     0398 34840000
 451 039c 0C000116		jal	print_string
 452 03a0               	
 453 03a0 3C090000		la      $t1, board_size
     03a4 35290000
 454 03a8 81290000		lb      $t1, 0($t1)
 455 03ac               
 456 03ac 34080000		li	$t0, 0
 457 03b0               
 458 03b0               
 459 03b0               print_break_row_loop:
 460 03b0               	
 461 03b0 11280005		beq	$t1, $t0, print_break_row_done
 462 03b4               
 463 03b4 3C040000		la	$a0, board_row_break_part
     03b8 34840000
 464 03bc 0C000116		jal	print_string
 465 03c0               
 466 03c0 21080001		addi	$t0, $t0, 1
 467 03c4               
 468 03c4 080000EC		j	print_break_row_loop
 469 03c8               
 470 03c8               print_break_row_done:
 471 03c8 3C040000		la	$a0, plus_char_break
     03cc 34840000
 472 03d0 0C000116		jal	print_string
 473 03d4               	
 474 03d4 8FBF0000		lw	$ra, 0($sp)
 475 03d8 23BD0004		addi	$sp, $sp, 4
 476 03dc               	
 477 03dc 03E00008		jr	$ra
 478 03e0               
 479 03e0               
 480 03e0               #
 481 03e0               # Name: print y hint
 482 03e0               #
 483 03e0               # Arguments:
 484 03e0               #    $a0: pointer to array
 485 03e0               #    $a1: index
 486 03e0               #
 487 03e0               print_y_hint:
 488 03e0 23BDFFFC		addi	$sp, $sp, -4
 489 03e4 AFBF0000		sw	$ra, 0($sp)
 490 03e8               
 491 03e8 00852020		add	$a0, $a0, $a1
 492 03ec 80840000		lb	$a0, 0($a0)
 493 03f0 0C000119		jal	print_number
 494 03f4               
 495 03f4 8FBF0000		lw	$ra, 0($sp)
 496 03f8 23BD0004		addi	$sp, $sp, 4
 497 03fc 03E00008		jr	$ra
 498 0400               
 499 0400               
 500 0400               
 501 0400               #
 502 0400               # Name: prints x axis hints
 503 0400               #
 504 0400               # Arguments: 
 505 0400               #     $a0: pointer to hint array
 506 0400               #
 507 0400               print_x_hints:
 508 0400 23BDFFFC		addi	$sp, $sp, -4
 509 0404 AFBF0000		sw	$ra, 0($sp)
 510 0408               	
 511 0408 00805021		move	$t2, $a0
 512 040c               
 513 040c 3C090000		la      $t1, board_size
     0410 35290000
 514 0414 81290000		lb      $t1, 0($t1)
 515 0418               
 516 0418 34080000		li	$t0, 0
 517 041c               	
 518 041c 3C040000		la	$a0, spaces
     0420 34840000
 519 0424 0C000116		jal	print_string
 520 0428               
 521 0428               print_x_hints_loop:
 522 0428               	
 523 0428 11280008		beq	$t1, $t0, print_x_hints_done
 524 042c               	
 525 042c 3C040000		la	$a0, spacesss
     0430 34840000
 526 0434 0C000116		jal	print_string
 527 0438               
 528 0438 81440000		lb	$a0, 0($t2)
 529 043c 0C000119		jal	print_number
 530 0440               
 531 0440 214A0001		addi	$t2, $t2, 1
 532 0444 21080001		addi	$t0, $t0, 1
 533 0448               
 534 0448 0800010A		j	print_x_hints_loop
 535 044c               
 536 044c               print_x_hints_done:
 537 044c               	
 538 044c 8FBF0000		lw	$ra, 0($sp)
 539 0450 23BD0004		addi	$sp, $sp, 4
 540 0454               	
 541 0454 03E00008		jr	$ra
 542 0458               
 543 0458               
 544 0458               
 545 0458               print_string:
 546 0458 34020004		li	$v0, PRINT_STRING
 547 045c 0000000C		syscall
 548 0460               
 549 0460 03E00008		jr	$ra
 550 0464               
 551 0464               print_number:
 552 0464 34020001		li	$v0, PRINT_INT
 553 0468 0000000C		syscall
 554 046c               
 555 046c 03E00008		jr	$ra
 556 0470               
 557 0470               
 558 0470               
 559 0470               
 560 0470               
 561 0470               
 562 0470               
 563 0470               
 564 0470               
 565 0470               


EXIT                       = 0000000A   
PRINT_INT                  = 00000001   
PRINT_STRING               = 00000004   
READ_INT                   = 00000005   
board                        00000001 R  data 
board_input_error            0000019F R  data 
board_row_break_part         00000181 R  data 
board_size                   00000000 R  data 
board_space_back             00000190 R  data 
board_space_front            00000189 R  data 
board_space_mid              0000018C R  data 
east_hints                   00000141 R  data 
fixed_input_error            00000234 R  data 
fixed_number_input_error     000001FB R  data 
get_east_hint                0000006C R  text 
get_hint                     00000084 R  text 
get_north_hint               00000054 R  text 
get_south_hint               00000060 R  text 
get_west_hint                00000078 R  text 
illegal_input_error          000001CD R  data 
load_fixed                   0000016C R  text 
load_fixed_done              00000214 R  text 
load_hints                   0000022C R  text 
load_hints_done              00000288 R  text 
main                         00000000 R  text 
main_done                    00000018 R  text 
new_line_char                00000194 R  data 
north_hints                  00000101 R  data 
plus_char_break              00000186 R  data 
print_board                  0000029C R  text 
print_board_done             00000348 R  text 
print_board_loop_col         0000030C R  text 
print_board_loop_col_done    00000330 R  text 
print_board_loop_row         000002D8 R  text 
print_break_row              00000380 R  text 
print_break_row_done         000003C8 R  text 
print_break_row_loop         000003B0 R  text 
print_number                 00000464 R  text 
print_string                 00000458 R  text 
print_x_hints                00000400 R  text 
print_x_hints_done           0000044C R  text 
print_x_hints_loop           00000428 R  text 
print_y_hint                 000003E0 R  text 
read_fixed_loop              00000190 R  text 
read_input                   00000090 R  text 
read_input_end               0000015C R  text 
read_input_error             00000154 R  text 
read_input_loop              0000024C R  text 
size_fixed_error             00000204 R  text 
size_input_error             00000278 R  text 
south_hints                  00000121 R  data 
spaces                       0000019D R  data 
spacess                      0000019A R  data 
spacesss                     00000196 R  data 
west_hints                   00000161 R  data 
write_board                  00000028 R  text 
